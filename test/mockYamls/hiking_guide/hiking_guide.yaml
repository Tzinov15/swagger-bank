##################################################################################################
#                               API INFORMATION                                                  #
##################################################################################################
swagger: '2.0'
info:
  title: Hiking Guide
  description: Get the best out of your hiking guides
  version: "1.0.0"
  contact:
    name: Alex Tzinov,
    url: http://www.hiking-guides.com,
    email: some_email@gmail.com

##################################################################################################
#                         HOST/BASEPATH/CONTENT-TYPES                                            #
##################################################################################################

# the domain of the service
host: api.hiking-guides.com
# array of all schemes that your API supports
schemes:
  - https
# will be prefixed to all paths
basePath: /v1
# perhaps this is the return type for responses? Makes sense for a simple API that just returns data in JSON form
produces:
  - application/json


#################################################
#      RESPONSES TO BE REUSED ACROSS ROUTES     #
#################################################
responses:
  Area:
    description: An area object
    schema:
      type: object
      $ref: '#/definitions/area'
    examples:
      $ref: 'responses/examples/area.yaml'
  AreaArray:
    description: An array of areas
    schema:
      type: array
      items:
        $ref: '#/definitions/area'
    examples:
        $ref: 'responses/examples/area_array.yaml'
  Trail:
    description: A trail object
    schema:
      type: object
      $ref: '#/definitions/trail'
    examples:
      $ref: 'responses/examples/trail.yaml'
  TrailArray:
    description: An array of trails
    schema:
      type: array
      items:
        $ref: '#/definitions/trail'
    examples:
      $ref: 'responses/examples/trail_array.yaml'

##################################################################################################
#                                         PATHS                                                  #
##################################################################################################

paths:
  /areas:
    ### GET /areas
    get:
      description: |
        This areas endpoint returns information about all of the areas available
        in the hiking guide. Each area will also contain information about all
        of the associated trails that are contained inside that area.
      summary: Get all of the areas in the hiking guide
      tags:
        - areas
      responses:
        200:
          $ref: '#/responses/AreaArray'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/error'
    ### POST /areas
    post:
      description: |
        This areas endpoint supports the creation of new areas by supplying all the
        required information of the area in the body
      summary: Add a new area to the hiking guide
      parameters:
        - name: body
          description: The area object that is to be added to the hiking guide
          in: body
          required: true
          schema:
            $ref: '#/definitions/area'
      tags:
        - areas
      responses:
        ## We will return to the user the successfully created area object so that they will have the server-generated area_id
        201:
          $ref: '#/responses/Area'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/error'


  /areas/{area_id}:
    ### GET /areas/{area_id}
    get:
      description: |
        Retrieves a single area object containing information about that area, referenced by area_id
      parameters:
        - name: area_id
          in: path
          type: string
          format: uuid
          required: true
          description: the unique uuid that identifies this area
      summary: Get an area by area ID
      tags:
        - areas
      responses:
        200:
          $ref: '#/responses/Area'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/error'
    ### PUT /areas/{area_id}
    put:
      description: |
        This areas endpoint allows a client to edit a preexisting area.
      parameters:
        - name: area_id
          in: path
          type: string
          format: uuid
          required: true
          description: the unique uuid that identifies this area
        - name: body
          description: The area object that is to be added to the hiking guide
          in: body
          required: true
          schema:
            $ref: '#/definitions/area'

      summary: Edit an existing area by area ID
      tags:
        - areas
      responses:
        ## We will return to the user the successfully created area object so that they will have the server-generated area_id
        200:
          $ref: '#/responses/Area'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/error'
    ### DELETE /areas/{area_id}
    delete:
      description: |
        This areas endpoint allows a client to delete an area. This will also delete any trails that are associated with this area
      parameters:
        - name: area_id
          in: path
          type: string
          format: uuid
          required: true
          description: the unique uuid that identifies this area
      summary: Delete an existing area by area ID
      tags:
        - areas
      responses:
        ## We will return to the user the successfully created area object so that they will have the server-generated area_id
        200:
          $ref: '#/responses/Area'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/error'

  /areas/{area_id}/trails:
    ### GET /areas/{area_id}/trails
    get:
      description: |
        This trails endpoint returns information about all of the trails available
        for a particular area in the hiking guide.
      summary: Get all of the trails for a given area
      tags:
        - trails
      parameters:
        - name: area_id
          in: path
          type: string
          format: uuid
          required: true
          description: the unique uuid that identifies this area
      responses:
        200:
          $ref: '#/responses/TrailArray'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/error'
    ### POST /areas/{area_id}/trails
    post:
      description: |
        This trails endpoint allows a client to create a new trail within a particular area
      summary: Add a new trail to a given area
      tags:
        - trails
      parameters:
        - name: area_id
          in: path
          type: string
          format: uuid
          required: true
          description: the unique uuid that identifies this area
        - name: body
          description: The trail object that is to be added to the hiking guide
          in: body
          required: true
          schema:
            $ref: '#/definitions/trail'

      responses:
        201:
          $ref: '#/responses/Trail'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/error'

  /areas/{area_id}/trails/{trail_id}:
    ### GET /areas/{area_id}/trails/{trail_id}
    get:
      description: |
        This trails endpoint returns information about all of the trails available
        for a particular area in the hiking guide.
      summary: Get a particular trail by trail ID and area ID
      tags:
        - trails
      parameters:
        - name: area_id
          in: path
          type: string
          format: uuid
          required: true
          description: the unique uuid that identifies this area
        - name: trail_id
          in: path
          type: number
          required: true
          description: the unique uuid that identifies the particular trail that is desired
      responses:
        200:
          $ref: '#/responses/Trail'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/error'
    ### PUT /areas/{area_id}/trails/{trail_id}
    put:
      description: |
        This trails endpoint allows the client to edit a trail
      summary: Edit an existing trail by trail ID and area ID
      tags:
        - trails
      parameters:
        - name: area_id
          in: path
          type: string
          format: uuid
          required: true
          description: the unique uuid that identifies this area
        - name: trail_id
          in: path
          type: number
          required: true
          description: the unique uuid that identifies the particular trail that is desired
        - name: body
          description: The trail object that is to be added to the hiking guide
          in: body
          required: true
          schema:
            $ref: '#/definitions/trail'

      responses:
        200:
          $ref: '#/responses/Trail'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/error'
    ### DELETE /areas/{area_id}/trails/{trail_id}
    delete:
      description: |
        This trails endpoint allows a client to delete a trail
      summary: Delete an existing trail by trail ID and area ID
      tags:
        - trails
      parameters:
        - name: area_id
          in: path
          type: string
          format: uuid
          required: true
          description: the unique uuid that identifies this area
        - name: trail_id
          in: path
          type: number
          required: true
          description: the unique uuid that identifies the particular trail that is desired
      responses:
        200:
          $ref: '#/responses/Trail'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/error'

  /areas/{area_id}/trails/{trail_id}/rocks/{rock_id}/{full_info}:
    get:
      description: |
        This retrieves information on a rock.
      tags:
        - trails
      parameters:
        - name: area_id
          in: path
          type: string
          format: uuid
          required: true
          description: the unique uuid that identifies this area
        - name: trail_id
          in: path
          type: number
          format: uuid
          required: true
          description: the unique uuid that identifies the particular trail that is desired
        - name: rock_id
          in: path
          type: integer
          required: true
          description: The unique int that identifies the rock
        - name: full_info
          in: path
          type: boolean
          required: true
          description: Whether or not to return full info for rock
      responses:
        200:
          $ref: '#/responses/Trail'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/error'

definitions:
  $ref: 'definitions.yaml'
